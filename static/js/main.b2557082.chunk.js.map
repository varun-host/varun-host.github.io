{"version":3,"sources":["Components/weather.component.jsx","Components/form.component.jsx","App.js","index.js"],"names":["minmaxTemp","min","max","className","Weather","props","city","weatherIcon","temp_celsius","temp_min","temp_max","description","Form","error","role","onSubmit","loadweather","type","name","autoComplete","placeholder","App","getWeather","e","a","preventDefault","target","elements","value","fetch","api_call","json","response","console","log","setState","celsius","main","temp","weather","get_WeatherIcon","id","state","undefined","icon","Thunderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","icons","rangeId","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2557082.chunk.js","sourcesContent":["import React from 'react';\nconst Weather =(props) =>{\n    return(\n        <div className=\"container text-light\">\n            <div className=\"cards pt-4\">\n                <h1>{props.city}</h1>\n                <h5 className=\"py-4\">\n                    <i className={`wi ${props.weatherIcon} display-1`}></i>\n                </h5>\n               {props.temp_celsius?<h1 className=\"py-2\">{props.temp_celsius}&deg;</h1>:null} \n                {/**show min and max temp */}\n                {minmaxTemp(props.temp_min,props.temp_max)}\n                <h4 className=\"py-3\">{props.description}</h4>\n            </div>\n            \n        </div>\n    )\n\n};\nfunction minmaxTemp(min,max){\n   if(min&&max){\n    return(\n        <h3>\n            <span className=\"px-4\">{min}&deg;</span>\n            <span className=\"px-4\">{max}&deg;</span>\n        </h3>\n    )\n   } \n}\nexport default Weather;","import React from \"react\";\nimport \"./form.style.css\";\n\nconst Form = (props) => {\n  return (\n    <div className=\"container\">\n        <div>{props.error?error():null}</div>\n      <form onSubmit={props.loadweather}>\n        <div className=\"row\">\n          <div className=\"col-md-3 offset-md-2\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"city\"\n              autoComplete=\"off\"\n              placeholder=\"City\"\n            />\n          </div>\n          <div className=\"col-md-3 mt-md-0 py-2 text-md-left\">\n            <button className=\"btn btn-warning\">Get Weather</button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\nfunction error(){\n    return(\n        <div className=\"alert alert-danger mx-5\" role=\"alert\">\n            Please Enter city\n        </div>\n    ) \n}\nexport default Form;\n","import React, { Component } from \"react\";\nimport Weather from \"./Components/weather.component\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Form from \"./Components/form.component\"\nimport './App.css'\n// git project https://github.com/erikflowers/weather-icons\nimport \"weather-icons/css/weather-icons.css\";\n\n\nconst api_key = \"1e434c19637ed4e6c8e779edd615dbbb\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      city: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: \"\",\n      error: false,\n    };\n   \n    this.weatherIcon = {\n      Thunderstorm: \"wi-thunderstorm\",\n      Drizzle: \"wi-sleet\",\n      Rain: \"wi-storm-showers\",\n      Snow: \"wi-snow\",\n      Atmosphere: \"wi-fog\",\n      Clear: \"wi-day-sunny\",\n      Clouds: \"wi-day-fog\",\n    };\n  }\n  //To set icon for different weather\n  get_WeatherIcon(icons, rangeId) {\n    switch (true) {\n      case rangeId >= 200 && rangeId <= 232:\n        this.setState({ icon: this.weatherIcon.Thunderstorm });\n        break;\n      case rangeId >= 300 && rangeId <= 321:\n        this.setState({ icon: this.weatherIcon.Drizzle });\n        break;\n      case rangeId >= 500 && rangeId <= 531:\n        this.setState({ icon: this.weatherIcon.Rain });\n        break;\n      case rangeId >= 600 && rangeId <= 622:\n        this.setState({ icon: this.weatherIcon.Snow });\n        break;\n      case rangeId === 800:\n        this.setState({ icon: this.weatherIcon.Clear });\n        break;\n      case rangeId >= 801 && rangeId <= 804:\n        this.setState({ icon: this.weatherIcon.Clouds });\n        break;\n      default:\n        this.setState({ icon: this.weatherIcon.Clouds });\n    }\n  }\n  getWeather = async (e) => {\n    e.preventDefault();\n    const city = e.target.elements.city.value;\n    if(city){\n      const api_call = await fetch(\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${api_key}`\n      );\n      const response = await api_call.json();\n      console.log(response);\n      this.setState({\n        city: `${response.name}`,\n        celsius: response.main.temp,\n        temp_max: response.main.temp_max,\n        temp_min: response.main.temp_min,\n        description: response.weather[0].description,\n        error:false\n      });\n\n      //setting icon\n      this.get_WeatherIcon(this.weatherIcon,response.weather[0].id)\n    }\n    else{\n      this.setState({error:true});\n    }\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <Form loadweather={this.getWeather} error={this.state.error}/> \n        <Weather\n          city={this.state.city}\n          temp_celsius={this.state.celsius}\n          temp_max={this.state.temp_max}\n          temp_min={this.state.temp_min}\n          description={this.state.description}\n          weatherIcon={this.state.icon}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}